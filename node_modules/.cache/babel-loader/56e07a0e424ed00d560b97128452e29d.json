{"ast":null,"code":"import _classCallCheck from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/certong/Project/Reactjs/letter-of-guarantees/src/components/common/TableList.js\";\nimport React from 'react';\nimport SkyLight from 'react-skylight';\nimport moment from 'moment';\nimport './TableList.css';\n\nvar TableList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableList, _React$Component);\n\n  function TableList(props) {\n    var _this;\n\n    _classCallCheck(this, TableList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableList).call(this, props));\n    _this.state = {\n      listItems: _this.props.datatList,\n      modelMainItem: [],\n      modelSubItem: [],\n      remarks: '',\n      adminAction: '',\n      isApproved: false,\n      isAdminRole: _this.props.role === 'a' ? true : false,\n      role: _this.props.role,\n      roleName: _this.props.role === 'a' ? 'Admin' : 'Patient'\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderAdminBtn = _this.renderAdminBtn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleModelOnClick = _this.handleModelOnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleViewMoreClose = _this.handleViewMoreClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRemarksChange = _this.handleRemarksChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.executeAfterModalClose = _this.executeAfterModalClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TableList, [{\n    key: \"executeAfterModalClose\",\n    value: function executeAfterModalClose() {\n      this.setState({\n        remarks: ''\n      });\n    }\n  }, {\n    key: \"handleViewMoreClose\",\n    value: function handleViewMoreClose() {\n      this.modelPopup.hide();\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(e) {\n      e.preventDefault();\n      var url = 'http://localhost:5000/api/letter/update/' + this.state.modelMainItem._id;\n      fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isApproved: this.state.adminAction === 'Approve' ? true : false,\n          remarks: this.state.remarks\n        })\n      }).then(function (res) {\n        return res.json();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      this.modelPopup.hide();\n    }\n  }, {\n    key: \"handleRemarksChange\",\n    value: function handleRemarksChange(e) {\n      var re = /^[0-9\\b]+$/;\n\n      if (this.state.adminAction === 'Approve') {\n        if (e.target.value === '' || re.test(e.target.value)) {\n          this.setState({\n            remarks: e.target.value,\n            isApproved: true\n          });\n        }\n      } else {\n        this.setState({\n          remarks: e.target.value,\n          isApproved: false\n        });\n      }\n    }\n  }, {\n    key: \"handleModelOnClick\",\n    value: function handleModelOnClick(item, action) {\n      this.setState({\n        adminAction: action,\n        modelMainItem: item,\n        modelSubItem: item.patient\n      });\n      this.modelPopup.show();\n    }\n  }, {\n    key: \"renderAdminBtn\",\n    value: function renderAdminBtn(item) {\n      var _this2 = this;\n\n      if (this.state.isAdminRole) {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleModelOnClick(item, 'Approve');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Approve\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleModelOnClick(item, 'Reject');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Reject\"));\n      } else {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleModelOnClick(item, 'View More');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"View More\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      this.state.listItems.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, item.patient.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, item.hospital), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, moment(item.created_at).format('DD-MM-YYYY')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, moment(item.date_from).format('DD/MM/YYYY'), \" to \", moment(item.date_to).format('DD/MM/YYYY')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, item.isApproved === null ? 'Pending' : item.isApproved ? 'Approved' : 'Rejected'), _this3.renderAdminBtn(item));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Table List\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Patient Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Hospital\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Date Created\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Expected Date Range\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Action\")), this.state.listItems)), React.createElement(SkyLight, {\n        hideOnOverlayClicked: true,\n        ref: function ref(_ref) {\n          return _this3.modelPopup = _ref;\n        },\n        title: this.state.roleName + \" Popup\",\n        afterClose: this.executeAfterModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.isAdminRole ? \"Do you want to \" + this.state.adminAction + ' this application?' : 'View More'), this.state.isAdminRole ? React.createElement(AdminModelContent, {\n        onSubmit: this.handleUpdate,\n        refreshTable: this.props.refreshTable,\n        remarks: this.state.remarks,\n        onChange: this.handleRemarksChange,\n        adminAction: this.state.adminAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }) : React.createElement(PatientModelContent, {\n        mainItem: this.state.modelMainItem,\n        subItem: this.state.modelSubItem,\n        onClick: this.handleViewMoreClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TableList;\n}(React.Component);\n\nvar PatientModelContent =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(PatientModelContent, _React$Component2);\n\n  function PatientModelContent() {\n    _classCallCheck(this, PatientModelContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PatientModelContent).apply(this, arguments));\n  }\n\n  _createClass(PatientModelContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(ModelInnerContent, {\n        innerContentLabel: \"Patient Name \",\n        innerContent: this.props.subItem.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(ModelInnerContent, {\n        innerContentLabel: \"Hospital\",\n        innerContent: this.props.mainItem.hospital,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(ModelInnerContent, {\n        innerContentLabel: \"Expected Date\",\n        innerContent: moment(this.props.mainItem.date_from).format('DD/MM/YYYY') + ' to ' + moment(this.props.mainItem.date_to).format('DD/MM/YYYY'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(ModelInnerContent, {\n        innerContentLabel: \"Created Date\",\n        innerContent: moment(this.props.mainItem.created_at).format('DD/MM/YYYY'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(ModelInnerContent, {\n        innerContentLabel: \"Remarks\",\n        innerContent: this.props.mainItem.remarks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(ModelInnerContent, {\n        innerContentLabel: \"Application Status\",\n        innerContent: this.props.mainItem.isApproved === null ? 'Pending' : this.props.mainItem.isApproved ? 'Approved' : 'Rejected',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Close\"));\n    }\n  }]);\n\n  return PatientModelContent;\n}(React.Component);\n\nvar AdminModelContent =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(AdminModelContent, _React$Component3);\n\n  function AdminModelContent() {\n    _classCallCheck(this, AdminModelContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AdminModelContent).apply(this, arguments));\n  }\n\n  _createClass(AdminModelContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.props.remarks,\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: this.props.adminAction,\n        onClick: this.props.refreshTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AdminModelContent;\n}(React.Component);\n\nvar ModelInnerContent =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(ModelInnerContent, _React$Component4);\n\n  function ModelInnerContent() {\n    _classCallCheck(this, ModelInnerContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ModelInnerContent).apply(this, arguments));\n  }\n\n  _createClass(ModelInnerContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"modelInnerContentWrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modelInnerContentLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.props.innerContentLabel)), React.createElement(\"div\", {\n        className: \"modelInnerContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.props.innerContent ? this.props.innerContent : '--'));\n    }\n  }]);\n\n  return ModelInnerContent;\n}(React.Component);\n\nexport default TableList;","map":{"version":3,"sources":["/Users/certong/Project/Reactjs/letter-of-guarantees/src/components/common/TableList.js"],"names":["React","SkyLight","moment","TableList","props","state","listItems","datatList","modelMainItem","modelSubItem","remarks","adminAction","isApproved","isAdminRole","role","roleName","handleUpdate","bind","renderAdminBtn","handleModelOnClick","handleViewMoreClose","handleRemarksChange","executeAfterModalClose","setState","modelPopup","hide","e","preventDefault","url","_id","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","console","log","re","target","value","test","item","action","patient","show","map","name","hospital","created_at","format","date_from","date_to","ref","refreshTable","Component","PatientModelContent","subItem","mainItem","onClick","AdminModelContent","onSubmit","onChange","ModelInnerContent","innerContentLabel","innerContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SkyLight from 'react-skylight';\nimport moment from 'moment';\n\nimport './TableList.css';\n\nclass TableList extends React.Component {\n\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         listItems: this.props.datatList,\n         modelMainItem: [],\n         modelSubItem: [],\n         remarks: '',\n         adminAction: '',\n         isApproved: false,\n         isAdminRole: this.props.role === 'a' ? true : false,\n         role: this.props.role,\n         roleName: this.props.role === 'a' ? 'Admin' : 'Patient'\n      }\n\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.renderAdminBtn = this.renderAdminBtn.bind(this);\n      this.handleModelOnClick = this.handleModelOnClick.bind(this);\n      this.handleViewMoreClose = this.handleViewMoreClose.bind(this);\n      this.handleRemarksChange = this.handleRemarksChange.bind(this);\n      this.executeAfterModalClose = this.executeAfterModalClose.bind(this);\n   }\n\n   executeAfterModalClose() {\n      this.setState({ remarks: '' });\n   }\n\n   handleViewMoreClose() {\n      this.modelPopup.hide();\n   }\n\n   handleUpdate(e) {\n      e.preventDefault();\n\n      const url = 'http://localhost:5000/api/letter/update/' + this.state.modelMainItem._id;\n\n      fetch(url, {\n         method: 'PUT',\n         headers: { 'Content-Type': 'application/json' },\n         body: JSON.stringify({\n            isApproved: this.state.adminAction === 'Approve' ? true : false,\n            remarks: this.state.remarks\n         })\n\n      }).then(res => res.json())\n         .catch((err) => console.log(err))\n\n      this.modelPopup.hide();\n   }\n\n   handleRemarksChange(e) {\n      const re = /^[0-9\\b]+$/;\n\n      if (this.state.adminAction === 'Approve') {\n         if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ remarks: e.target.value, isApproved: true });\n         }\n      } else {\n         this.setState({ remarks: e.target.value, isApproved: false });\n      }\n   }\n\n   handleModelOnClick(item, action) {\n      this.setState({\n         adminAction: action,\n         modelMainItem: item,\n         modelSubItem: item.patient\n      });\n\n      this.modelPopup.show();\n   }\n\n   renderAdminBtn(item) {\n      if (this.state.isAdminRole) {\n         return <td>\n            <button onClick={() => this.handleModelOnClick(item, 'Approve')}>Approve</button>\n            <button onClick={() => this.handleModelOnClick(item, 'Reject')}>Reject</button>\n         </td>\n      } else {\n         return <td>\n            <button onClick={() => this.handleModelOnClick(item, 'View More')}>View More</button>\n         </td>\n      }\n   }\n\n   render() {\n      this.state.listItems.map(\n         (item) =>\n            <tr key={item._id}>\n               <td>{item.patient.name}</td>\n               <td>{item.hospital}</td>\n               <td>{moment(item.created_at).format('DD-MM-YYYY')}</td>\n               <td>{moment(item.date_from).format('DD/MM/YYYY')} to {moment(item.date_to).format('DD/MM/YYYY')}</td>\n               <td>{item.isApproved === null ? 'Pending' : item.isApproved ? 'Approved' : 'Rejected'}</td>\n               {this.renderAdminBtn(item)}\n            </tr>\n      );\n\n      return (\n         <div>\n            <h2>Table List</h2>\n            <table>\n               <tbody>\n                  <tr>\n                     <th>Patient Name</th>\n                     <th>Hospital</th>\n                     <th>Date Created</th>\n                     <th>Expected Date Range</th>\n                     <th>Status</th>\n                     <th>Action</th>\n                  </tr>\n                  {this.state.listItems}\n               </tbody>\n            </table>\n\n            <SkyLight hideOnOverlayClicked ref={ref => this.modelPopup = ref} title={this.state.roleName + \" Popup\"} afterClose={this.executeAfterModalClose}>\n               <h3>{this.state.isAdminRole ? \"Do you want to \" + this.state.adminAction + ' this application?' : 'View More'}</h3>\n\n               {this.state.isAdminRole ? <AdminModelContent onSubmit={this.handleUpdate} refreshTable={this.props.refreshTable}\n                  remarks={this.state.remarks} onChange={this.handleRemarksChange} adminAction={this.state.adminAction} />\n                  : <PatientModelContent mainItem={this.state.modelMainItem} subItem={this.state.modelSubItem} onClick={this.handleViewMoreClose} />}\n            </SkyLight>\n         </div>\n      )\n   }\n}\n\nclass PatientModelContent extends React.Component {\n   render() {\n      return <div>\n         <ModelInnerContent innerContentLabel='Patient Name ' innerContent={this.props.subItem.name} />\n         <ModelInnerContent innerContentLabel='Hospital' innerContent={this.props.mainItem.hospital} />\n         <ModelInnerContent innerContentLabel='Expected Date' innerContent={moment(this.props.mainItem.date_from).format('DD/MM/YYYY') + ' to ' + moment(this.props.mainItem.date_to).format('DD/MM/YYYY')} />\n         <ModelInnerContent innerContentLabel='Created Date' innerContent={moment(this.props.mainItem.created_at).format('DD/MM/YYYY')} />\n         <ModelInnerContent innerContentLabel='Remarks' innerContent={this.props.mainItem.remarks} />\n         <ModelInnerContent innerContentLabel='Application Status' innerContent={this.props.mainItem.isApproved === null ? 'Pending' : this.props.mainItem.isApproved ? 'Approved' : 'Rejected'} />\n         <button onClick={this.props.onClick}>Close</button>\n      </div>\n   }\n}\n\nclass AdminModelContent extends React.Component {\n   render() {\n      return <form onSubmit={this.props.onSubmit}>\n         <input type=\"text\" value={this.props.remarks} onChange={this.props.onChange} />\n         <input type=\"submit\" value={this.props.adminAction} onClick={this.props.refreshTable} />\n      </form>\n   }\n}\n\nclass ModelInnerContent extends React.Component {\n   render() {\n      return <div className='modelInnerContentWrap'>\n         <div className=\"modelInnerContentLabel\"><h4>{this.props.innerContentLabel}</h4></div>\n         <div className=\"modelInnerContent\">{this.props.innerContent ? this.props.innerContent : '--'}</div>\n      </div>\n   }\n}\n\nexport default TableList;"]},"metadata":{},"sourceType":"module"}