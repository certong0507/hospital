{"ast":null,"code":"import _classCallCheck from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/certong/Project/Reactjs/letter-of-guarantees/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/certong/Project/Reactjs/letter-of-guarantees/src/components/common/TableList.js\";\nimport React from 'react';\nimport SkyLight from 'react-skylight';\nimport moment from 'moment';\nimport './TableList.css';\n\nvar TableList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableList, _React$Component);\n\n  function TableList(props) {\n    var _this;\n\n    _classCallCheck(this, TableList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableList).call(this, props));\n    _this.state = {\n      modelMainItem: [],\n      modelSubItem: [],\n      remarks: '',\n      adminAction: '',\n      isApproved: false,\n      isAdminRole: _this.props.role === 'a' ? true : false,\n      role: _this.props.role,\n      roleName: _this.props.role === 'a' ? 'Admin' : 'Patient'\n    };\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderAdminBtn = _this.renderAdminBtn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleModelOnClick = _this.handleModelOnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRemarksChange = _this.handleRemarksChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.executeAfterModalClose = _this.executeAfterModalClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TableList, [{\n    key: \"executeAfterModalClose\",\n    value: function executeAfterModalClose() {\n      this.setState({\n        remarks: ''\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(e) {\n      e.preventDefault();\n      var url = 'http://localhost:5000/api/letter/update/' + this.state.modelMainItem._id;\n      fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isApproved: this.state.adminAction === 'Approve' ? true : false,\n          remarks: this.state.remarks\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return console.log(res);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      this.modelPopup.hide();\n    }\n  }, {\n    key: \"handleRemarksChange\",\n    value: function handleRemarksChange(e) {\n      var re = /^[0-9\\b]+$/;\n\n      if (this.state.adminAction === 'Approve') {\n        if (e.target.value === '' || re.test(e.target.value)) {\n          this.setState({\n            remarks: e.target.value,\n            isApproved: true\n          });\n        }\n      } else {\n        this.setState({\n          remarks: e.target.value,\n          isApproved: false\n        });\n      }\n    }\n  }, {\n    key: \"handleModelOnClick\",\n    value: function handleModelOnClick(item, action) {\n      this.setState({\n        adminAction: action,\n        modelMainItem: item,\n        modelSubItem: item.patient\n      });\n      this.modelPopup.show();\n    }\n  }, {\n    key: \"renderAdminBtn\",\n    value: function renderAdminBtn(item) {\n      var _this2 = this;\n\n      if (this.state.isAdminRole) {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleModelOnClick(item, 'Approve');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Approve\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleModelOnClick(item, 'Reject');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Reject\"));\n      } else {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleModelOnClick(item, 'View More');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"View More\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var listItems = this.props.datatList.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, item.patient.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, item.hospital), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, item.created_at), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, moment(item.date_from).format('DD/MM/YYYY'), \" to \", moment(item.date_to).format('DD/MM/YYYY')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, item.isApproved ? 'Approved' : 'Pending'), _this3.renderAdminBtn(item));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Table List\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Patient Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Hospital\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Date Created\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Expected Date Range\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Action\")), listItems)), React.createElement(SkyLight, {\n        hideOnOverlayClicked: true,\n        ref: function ref(_ref) {\n          return _this3.modelPopup = _ref;\n        },\n        title: this.state.roleName + \" action\",\n        afterClose: this.executeAfterModalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Do you want to \", this.state.adminAction, \" this application?\", this.state.isAdminRole ? React.createElement(AdminModelContent, {\n        onSubmit: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }) : React.createElement(PatientModelContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TableList;\n}(React.Component);\n\nvar PatientModelContent =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(PatientModelContent, _React$Component2);\n\n  function PatientModelContent() {\n    _classCallCheck(this, PatientModelContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PatientModelContent).apply(this, arguments));\n  }\n\n  _createClass(PatientModelContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Patient View\");\n    }\n  }]);\n\n  return PatientModelContent;\n}(React.Component);\n\nvar AdminModelContent =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(AdminModelContent, _React$Component3);\n\n  function AdminModelContent() {\n    _classCallCheck(this, AdminModelContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AdminModelContent).apply(this, arguments));\n  }\n\n  _createClass(AdminModelContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.remarks,\n        onChange: this.handleRemarksChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: this.state.adminAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AdminModelContent;\n}(React.Component);\n\nexport default TableList;","map":{"version":3,"sources":["/Users/certong/Project/Reactjs/letter-of-guarantees/src/components/common/TableList.js"],"names":["React","SkyLight","moment","TableList","props","state","modelMainItem","modelSubItem","remarks","adminAction","isApproved","isAdminRole","role","roleName","handleUpdate","bind","renderAdminBtn","handleModelOnClick","handleRemarksChange","executeAfterModalClose","setState","e","preventDefault","url","_id","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","catch","err","modelPopup","hide","re","target","value","test","item","action","patient","show","listItems","datatList","map","name","hospital","created_at","date_from","format","date_to","ref","Component","PatientModelContent","AdminModelContent","onSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SkyLight from 'react-skylight';\nimport moment from 'moment';\n\nimport './TableList.css';\n\nclass TableList extends React.Component {\n\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         modelMainItem: [],\n         modelSubItem: [],\n         remarks: '',\n         adminAction: '',\n         isApproved: false,\n         isAdminRole: this.props.role === 'a' ? true : false,\n         role: this.props.role,\n         roleName: this.props.role === 'a' ? 'Admin' : 'Patient'\n      }\n\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.renderAdminBtn = this.renderAdminBtn.bind(this);\n      this.handleModelOnClick = this.handleModelOnClick.bind(this);\n      this.handleRemarksChange = this.handleRemarksChange.bind(this);\n      this.executeAfterModalClose = this.executeAfterModalClose.bind(this);\n   }\n\n   executeAfterModalClose() {\n      this.setState({\n         remarks: ''\n      })\n   }\n\n   handleUpdate(e) {\n      e.preventDefault();\n      const url = 'http://localhost:5000/api/letter/update/' + this.state.modelMainItem._id;\n\n      fetch(url, {\n         method: 'PUT',\n         headers: { 'Content-Type': 'application/json' },\n         body: JSON.stringify({\n            isApproved: this.state.adminAction === 'Approve' ? true : false,\n            remarks: this.state.remarks\n         })\n\n      }).then(res => res.json())\n         .then(res => console.log(res))\n         .catch((err) => console.log(err))\n\n      this.modelPopup.hide();\n   }\n\n   handleRemarksChange(e) {\n      const re = /^[0-9\\b]+$/;\n\n      if (this.state.adminAction === 'Approve') {\n         if (e.target.value === '' || re.test(e.target.value)) {\n            this.setState({ remarks: e.target.value, isApproved: true });\n         }\n      } else {\n         this.setState({ remarks: e.target.value, isApproved: false });\n      }\n   }\n\n   handleModelOnClick(item, action) {\n      this.setState({\n         adminAction: action,\n         modelMainItem: item,\n         modelSubItem: item.patient\n      });\n\n      this.modelPopup.show();\n   }\n\n   renderAdminBtn(item) {\n      if (this.state.isAdminRole) {\n         return <td>\n            <button onClick={() => this.handleModelOnClick(item, 'Approve')}>Approve</button>\n            <button onClick={() => this.handleModelOnClick(item, 'Reject')}>Reject</button>\n         </td>\n      } else {\n         return <td>\n            <button onClick={() => this.handleModelOnClick(item, 'View More')}>View More</button>\n         </td>\n      }\n   }\n\n   render() {\n      const listItems = this.props.datatList.map(\n         (item) =>\n            <tr key={item._id}>\n               <td>{item.patient.name}</td>\n               <td>{item.hospital}</td>\n               <td>{item.created_at}</td>\n               <td>{moment(item.date_from).format('DD/MM/YYYY')} to {moment(item.date_to).format('DD/MM/YYYY')}</td>\n               <td>{item.isApproved ? 'Approved' : 'Pending'}</td>\n               {this.renderAdminBtn(item)}\n            </tr>\n      );\n\n      return (\n         <div>\n            <h2>Table List</h2>\n            <table>\n               <tbody>\n                  <tr>\n                     <th>Patient Name</th>\n                     <th>Hospital</th>\n                     <th>Date Created</th>\n                     <th>Expected Date Range</th>\n                     <th>Status</th>\n                     <th>Action</th>\n                  </tr>\n                  {listItems}\n               </tbody>\n            </table>\n\n            <SkyLight hideOnOverlayClicked ref={ref => this.modelPopup = ref} title={this.state.roleName + \" action\"} afterClose={this.executeAfterModalClose}>\n               Do you want to {this.state.adminAction} this application?\n               {/* <form onSubmit={this.handleUpdate}>\n                  <input type=\"text\" value={this.state.remarks} onChange={this.handleRemarksChange} />\n                  <input type=\"submit\" value={this.state.adminAction} />\n               </form> */}\n\n               { this.state.isAdminRole ? <AdminModelContent onSubmit={this.handleUpdate}/> : <PatientModelContent/> }\n            </SkyLight>\n         </div>\n      )\n   }\n}\n\nclass PatientModelContent extends React.Component {\n   render() {\n      return <div>Patient View</div>\n   }\n}\n\nclass AdminModelContent extends React.Component {\n   render() {\n      return <form onSubmit={this.props.onSubmit}>\n         <input type=\"text\" value={this.state.remarks} onChange={this.handleRemarksChange} />\n         <input type=\"submit\" value={this.state.adminAction} />\n      </form>\n   }\n}\n\nexport default TableList;"]},"metadata":{},"sourceType":"module"}